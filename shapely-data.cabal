Name:                shapely-data

Version:             0.1

Synopsis:            Template haskell conversion of types to a "structural form" built from primitive sum, product, and unit types.

Description:         This is an experimental package providing template haskell
                     code to convert to and from normal algebraic data types and a
                     representation using only haskell's primitive product, sum
                     and unit types: (,), Either, and ().
                     .
                     This is something like light-weight Structural Typing.
                     .
                     Please send any comments along.
                     -- WE WILL SCRAP ABOVE. HERE ARE NOTES TO INCLUDE:
                     Library not designed to facilitate datatype generic programming, e.g. defining traversals ...
                     - create a good story around sums and products that can be used anywhere (give simple-actors example)
                     - Support rich algebraic operations on algebraic datatypes



Homepage:            http://brandon.si/code/shapely-data/

License:             BSD3
License-file:        LICENSE

Author:              Brandon Simmons

Maintainer:          brandon.m.simmons@gmail.com

-- Copyright:           

Category:            Data
Category:            Generics

Build-type:          Simple

Extra-source-files:  README.md

Cabal-version:       >= 1.8

source-repository head   
    type:     git
    location: https://github.com/jberryman/shapely-data.git
    branch:   master

Library
  hs-source-dirs: src

  Exposed-modules:     Data.Shapely
                     , Data.Shapely.Normal
                     , Data.Shapely.Spine
                     , Data.Shapely.Normal.TypeIndexed

  Other-modules:       Data.Shapely.Category
                     , Data.Shapely.Bool
                     , Data.Shapely.Classes
                     , Data.Shapely.Normal.Classes
                     , Data.Shapely.Normal.Exponentiation
                     , Data.Shapely.Normal.Isomorphic
                     , Data.Shapely.Normal.Massageable
                     , Data.Shapely.TH
                     , Data.Shapely.Utilities
  
  ghc-options: -Wall
  
  Build-depends:       base <5
                     , template-haskell >= 2 && < 3
                     , tagged
                     , proxy-kindness == 0.1
  
  -- TODO: what's appropriate here?
  Extensions:          MultiParamTypeClasses
                     , FunctionalDependencies
                     , TemplateHaskell


test-suite test
  type: exitcode-stdio-1.0

  hs-source-dirs: test, src
                 
  main-is: Main.hs

  -- ghc-options: -fhpc

  Build-depends:       base <5
                     , template-haskell >= 2 && < 3
                     , tagged
                     , proxy-kindness == 0.1
                     -- new:
                     , QuickCheck >= 2, containers
                     -- is this right?
                     , shapely-data 


  Extensions:          MultiParamTypeClasses
                     , FunctionalDependencies
                     , TemplateHaskell
